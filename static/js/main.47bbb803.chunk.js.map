{"version":3,"sources":["components/Display/Display.jsx","components/Socket/Socket.jsx","index.js"],"names":["Display","className","width","cellSpacing","Date","now","Math","random","this","props","messages","map","item","name","substr","toLowerCase","_id","unit","measurements","Component","Socket","state","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","dex","str","formattedTime","forEach","element","idx","date","toLocaleString","length","uniqKey","concat","accumul","slice","splice","setState","onerror","err","message","close","onclose","wasClean","code","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47bbb803.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './display.css';\r\n\r\nexport default class Display extends Component {\r\n  render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<td width=\"22%\" key={Date.now()*Math.random()}>_ID</td>\r\n\t\t\t\t\t\t\t\t<td width=\"15%\" key={Date.now()*Math.random()}>Name</td>\r\n\t\t\t\t\t\t\t\t<td width=\"12%\" key={Date.now()*Math.random()}>Unit</td>\r\n\t\t\t\t\t\t\t\t<td key={Date.now()*Math.random()}>Measurements</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\t\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t{ this.props.messages.map( item =>\r\n\t\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"22%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item._id}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"15%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"12%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item.unit}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item.measurements}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n  }\r\n}","import React from 'react';\r\nimport Display from '../Display/Display.jsx';\r\n\r\nexport default class Socket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      messages: []\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // initializing Socket\r\n    this.socket = new WebSocket('wss://jsdemo.envdev.io/ws');\r\n\r\n    // connected successfully\r\n    this.socket.onopen = () => {\r\n      console.log(\"Connected successfully!\");\r\n    };\r\n\r\n    // received data from device and format it\r\n    this.socket.onmessage = event => { \r\n      let messages = JSON.parse(event.data);\r\n\r\n      // formating the datestamp and value\r\n      messages.map((item, dex) => {\r\n        let str = \"\";\r\n        let formattedTime = \"\";\r\n        item.measurements.forEach((element, idx) => {\r\n          const date = new Date(element[0] * 1000);\r\n          formattedTime = `Date: ${date.toLocaleString()}.  Value: `;\r\n          console.log('formattedTime: ', formattedTime);\r\n          if(element[1].length >= 2) str = `${element[0]}, {${element[1]}}.`;\r\n            else if(element[1].length === 1) str = `{${element[0]},  ${element[1]}}.`;\r\n              else str = `${element}.`;\r\n        });\r\n        item.measurements = formattedTime + str;\r\n        item.uniqKey = str.concat(item._id, item.name)        \r\n        return item;\r\n      });\r\n\r\n      let accumul = this.state.messages.slice().concat(messages);\r\n      if (accumul.length >= 20) accumul.splice(0, 3);\r\n      this.setState({ messages: accumul });      \r\n    };\r\n\r\n    // encountered error\r\n    this.socket.onerror = err => {\r\n      console.log(`Socket encountered error: ${err.message}. Closing socket.`);\r\n      this.socket.close();\r\n    };\r\n\r\n    // connection lost\r\n    this.socket.onclose = event => {\r\n      if (event.wasClean) console.log(`Socket was closed clearly, code=${event.code}.`);\r\n        else console.log('The connection was lost.');\r\n    };\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.socket.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Display messages={this.state.messages} key={this.state.messages.uniqKey} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Socket from './components/Socket/Socket';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Socket />\n    </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}