{"version":3,"sources":["components/Display/Display.jsx","components/Socket/Socket.jsx","index.js"],"names":["Display","className","width","cellSpacing","Date","now","Math","random","this","props","messages","map","item","name","substr","toLowerCase","_id","unit","timeStamp","measurements","Component","Socket","state","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","dex","str","formattedTime","forEach","element","idx","date","toLocaleString","length","uniqKey","concat","filter","index","indexOf","accumul","slice","i","hasID","j","push","setState","onerror","err","message","close","onclose","wasClean","code","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e7645e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './display.css';\r\n\r\nexport default class Display extends Component {\r\n  render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<td width=\"25%\" key={Date.now()*Math.random()}>_ID</td>\r\n\t\t\t\t\t\t\t\t<td width=\"15%\" key={Date.now()*Math.random()}>Name</td>\r\n\t\t\t\t\t\t\t\t<td width=\"10%\" key={Date.now()*Math.random()}>Unit</td>\r\n\t\t\t\t\t\t\t\t<td width=\"20%\" key={Date.now()*Math.random()}>Date & Time</td>\r\n\t\t\t\t\t\t\t\t<td key={Date.now()*Math.random()}>Measurements</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\t\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t{ this.props.messages.map( item =>\r\n\t\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"25%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item._id}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"15%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"10%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.unit}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"20%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.timeStamp}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.measurements}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n  }\r\n}","import React from 'react';\r\nimport Display from '../Display/Display.jsx';\r\n\r\nexport default class Socket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      messages: []\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // initializing Socket\r\n    this.socket = new WebSocket('wss://jsdemo.envdev.io/ws');\r\n\r\n    // connected successfully\r\n    this.socket.onopen = () => {\r\n      console.log(\"Connected successfully!\");\r\n    };\r\n\r\n    // received data from device and format it\r\n    this.socket.onmessage = event => { \r\n      let messages = JSON.parse(event.data);\r\n\r\n      // formating timestamp and value\r\n      messages.map((item, dex) => {\r\n        let str = \"\";\r\n        let formattedTime = \"\";\r\n        item.measurements.forEach((element, idx) => {\r\n          const date = new Date(element[0] * 1000);\r\n          formattedTime = `${date.toLocaleString()}`;\r\n          if (element[1].length >= 2) str = `[${element[1]}]`;\r\n            else str = `${element[1]}`;\r\n        });\r\n        item.measurements = str;\r\n        item.timeStamp = formattedTime;\r\n        item.uniqKey = str.concat(item._id, item.name)        \r\n        return item;\r\n      });\r\n      messages.filter((item, index) => messages.indexOf(item._id) === index);\r\n\r\n      // updating of new messages\r\n      let accumul = this.state.messages.slice();\r\n\r\n      for (let i=0; i<messages.length; i++) {\r\n        let hasID = false;\r\n        for (let j=0; j<accumul.length; j++) {\r\n            if (messages[i]._id === accumul[j]._id) {\r\n              if (messages[i].timeStamp && messages[i].measurements) {\r\n                accumul[j].timeStamp = messages[i].timeStamp;\r\n                accumul[j].measurements = messages[i].measurements;                \r\n                accumul[j].unit = messages[i].unit;\r\n                accumul[j].uniqKey = messages[i].uniqKey;\r\n              }\r\n              hasID = true;\r\n            }\r\n        }\r\n        if (!hasID) // update values\r\n          accumul.push(messages[i]);\r\n      }\r\n      this.setState({ messages: accumul });      \r\n    };\r\n\r\n    // encountered error\r\n    this.socket.onerror = err => {\r\n      console.log(`Socket encountered error: ${err.message}. Closing socket.`);\r\n      this.socket.close();\r\n    };\r\n\r\n    // connection lost\r\n    this.socket.onclose = event => {\r\n      if (event.wasClean) console.log(`Socket was closed clearly, code=${event.code}.`);\r\n        else console.log('The connection was lost.');\r\n    };\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.socket.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Display messages={this.state.messages} key={this.state.messages.uniqKey} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Socket from './components/Socket/Socket';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Socket />\n    </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}