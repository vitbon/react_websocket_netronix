{"version":3,"sources":["components/Display/Display.jsx","components/Socket/Socket.jsx","index.js"],"names":["Display","className","width","cellSpacing","this","props","messages","map","item","name","substr","toLowerCase","_id","Date","now","Math","random","unit","blink","timeStamp","measurements","Component","Socket","state","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","dex","str","formattedTime","forEach","element","date","toLocaleString","filter","index","indexOf","accumul","slice","i","length","hasID","j","push","setState","onerror","err","message","close","onclose","wasClean","code","Fragment","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59dfd2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './display.css';\r\n\r\nexport default class Display extends Component {\r\n  render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\">\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td width=\"25%\">_ID</td>\r\n\t\t\t\t\t\t\t\t<td width=\"15%\">Name</td>\r\n\t\t\t\t\t\t\t\t<td width=\"10%\">Unit</td>\r\n\t\t\t\t\t\t\t\t<td width=\"20%\">Date & Time</td>\r\n\t\t\t\t\t\t\t\t<td>Measurements</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\t\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t{ this.props.messages.map( item =>\r\n\t\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"25%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item._id}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"15%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"10%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.unit}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"20%\" key={Date.now()*Math.random()} className={item.blink}>\r\n\t\t\t\t\t\t\t\t\t\t{item.timeStamp}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key={Date.now()*Math.random()} className={item.blink}>\r\n\t\t\t\t\t\t\t\t\t\t{item.measurements}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n  }\r\n}","import React from 'react';\r\nimport Display from '../Display/Display.jsx';\r\n\r\nexport default class Socket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      messages: []\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // initializing Socket\r\n    this.socket = new WebSocket('wss://jsdemo.envdev.io/ws');\r\n\r\n    // connected successfully\r\n    this.socket.onopen = () => {\r\n      console.log(\"Connected successfully!\");\r\n    };\r\n\r\n    // received data from device and format it\r\n    this.socket.onmessage = event => { \r\n      let messages = JSON.parse(event.data);\r\n\r\n      // formating timestamp and value\r\n      messages.map((item, dex) => {\r\n        let str = \"\";\r\n        let formattedTime = \"\";\r\n        item.measurements.forEach(element => {\r\n          const date = new Date(element[0] * 1000);\r\n          formattedTime = `${date.toLocaleString()}`;\r\n          str = `${element[1]}`;\r\n        });\r\n        item.measurements = str;\r\n        item.timeStamp = formattedTime;\r\n        return item;\r\n      });\r\n      messages.filter((item, index) => messages.indexOf(item._id) === index);\r\n\r\n      // updating of new messages\r\n      let accumul = this.state.messages.slice();\r\n      accumul.map(item => item.blink = \"\");\r\n\r\n      for (let i=0; i<messages.length; i++) {\r\n        let hasID = false;\r\n        for (let j=0; j<accumul.length; j++) {\r\n          if (messages[i]._id === accumul[j]._id) {\r\n            if (messages[i].timeStamp && messages[i].measurements) {\r\n              accumul[j].timeStamp = messages[i].timeStamp;\r\n              accumul[j].measurements = messages[i].measurements;                \r\n              accumul[j].unit = messages[i].unit;\r\n              accumul[j].blink = \"blink\";\r\n            }\r\n            hasID = true;\r\n          }\r\n        }\r\n        if (!hasID) { // update values\r\n          messages[i].blink = \"blink\";\r\n          accumul.push(messages[i]);\r\n        }\r\n      }\r\n      this.setState({ messages: accumul });      \r\n    };\r\n\r\n    // encountered error\r\n    this.socket.onerror = err => {\r\n      console.log(`Socket encountered error: ${err.message}. Closing socket.`);\r\n      this.socket.close();\r\n    };\r\n\r\n    // connection lost\r\n    this.socket.onclose = event => {\r\n      if (event.wasClean) console.log(`Socket was closed clearly, code=${event.code}.`);\r\n        else console.log('The connection was lost.');\r\n    };\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.socket.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Display messages={this.state.messages} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Socket from './components/Socket/Socket';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Socket />\n    </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}