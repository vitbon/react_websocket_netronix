{"version":3,"sources":["components/Display/Display.jsx","components/StatusBar/StatusBar.jsx","components/Socket/Socket.jsx","index.js"],"names":["Display","className","width","cellSpacing","this","props","messages","map","item","name","substr","toLowerCase","_id","Date","now","Math","random","unit","blink","timeStamp","measurements","Component","StatusBar","status","server","info","connection","error","Socket","state","socket","WebSocket","setState","onopen","onmessage","event","JSON","parse","data","dex","str","formattedTime","forEach","element","date","toLocaleString","filter","index","indexOf","accumul","slice","i","length","hasID","j","push","onerror","err","message","close","onclose","wasClean","code","Fragment","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGqBA,G,6KAEnB,OACC,sBAAKC,UAAU,YAAf,UACC,qBAAKA,UAAU,SAAf,SACC,uBAAOC,MAAM,OAAOC,YAAY,MAAhC,SACC,gCACC,+BACC,oBAAID,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,yBACA,uDAKJ,qBAAKD,UAAU,UAAf,SACGG,KAAKC,MAAMC,SAASC,KAAK,SAAAC,GAAI,OAC9B,uBAAON,MAAM,OAAOC,YAAY,MAAhC,SACC,gCACC,+BACC,oBAAID,MAAM,MACRD,UAAWO,EAAKC,KAAKC,OAAO,EAAE,GAAGC,cADnC,SAIEH,EAAKI,KAFAC,KAAKC,MAAMC,KAAKC,UAIvB,oBAAId,MAAM,MAAV,SACEM,EAAKC,MADcI,KAAKC,MAAMC,KAAKC,UAGrC,oBAAId,MAAM,MAAV,SACEM,EAAKS,MADcJ,KAAKC,MAAMC,KAAKC,UAGrC,oBAAId,MAAM,MAAqCD,UAAWO,EAAKU,MAA/D,SACEV,EAAKW,WADcN,KAAKC,MAAMC,KAAKC,UAGrC,oBAAmCf,UAAWO,EAAKU,MAAnD,SACEV,EAAKY,cADEP,KAAKC,MAAMC,KAAKC,YAhBjBH,KAAKC,MAAMC,KAAKC,WADdH,KAAKC,MAAMC,KAAKC,WADcH,KAAKC,MAAMC,KAAKC,sB,GAnB5BK,cCAhBC,G,6KACT,IAAD,EACyBlB,KAAKC,MAAMkB,OAAnCC,EADD,EACCA,OAAQC,EADT,EACSA,KACZC,EAFG,EACeC,MACG,OAAS,OAEpC,OACC,mCACK,4CACU,sBAAM1B,UAAU,UAAhB,SAA2BuB,OAErC,4CACU,uBAAMvB,UAAWyB,EAAjB,UAA8BD,EAA9B,aAEV,+CACa,sBAAMxB,UAAU,UAAhB,mD,GAdkBoB,cCClBO,E,kDACnB,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,OAAQ,4BACRxB,SAAU,GACViB,OAAQ,CACNC,OAAQ,GACRC,KAAM,GACNE,OAAO,IARM,E,gEAaC,IAAD,OAEjBvB,KAAK0B,OAAS,IAAIC,UAAU3B,KAAKyB,MAAMC,QACvC1B,KAAK4B,SAAS,CAACT,OAAO,2BAAKnB,KAAKyB,MAAMN,QAAjB,IAAyBC,OAAQpB,KAAKyB,MAAMC,WAGjE1B,KAAK0B,OAAOG,OAAS,WACnB,EAAKD,SAAS,CAACT,OAAO,2BAAK,EAAKM,MAAMN,QAAjB,IACGE,KAAM,YACNE,OAAO,OAKjCvB,KAAK0B,OAAOI,UAAY,SAAAC,GACtB,IAAI7B,EAAW8B,KAAKC,MAAMF,EAAMG,MAGhChC,EAASC,KAAI,SAACC,EAAM+B,GAClB,IAAIC,EAAM,GACNC,EAAgB,GAQpB,OAPAjC,EAAKY,aAAasB,SAAQ,SAAAC,GACxB,IAAMC,EAAO,IAAI/B,KAAkB,IAAb8B,EAAQ,IAC9BF,EAAa,UAAMG,EAAKC,kBACxBL,EAAG,UAAMG,EAAQ,OAEnBnC,EAAKY,aAAeoB,EACpBhC,EAAKW,UAAYsB,EACVjC,KAETF,EAASwC,QAAO,SAACtC,EAAMuC,GAAP,OAAiBzC,EAAS0C,QAAQxC,EAAKI,OAASmC,KAGhE,IAAIE,EAAU,EAAKpB,MAAMvB,SAAS4C,QAClCD,EAAQ1C,KAAI,SAAAC,GAAI,OAAIA,EAAKU,MAAQ,MAEjC,IAAK,IAAIiC,EAAE,EAAGA,EAAE7C,EAAS8C,OAAQD,IAAK,CAEpC,IADA,IAAIE,GAAQ,EACHC,EAAE,EAAGA,EAAEL,EAAQG,OAAQE,IAC1BhD,EAAS6C,GAAGvC,MAAQqC,EAAQK,GAAG1C,MAC7BN,EAAS6C,GAAGhC,WAAab,EAAS6C,GAAG/B,eACvC6B,EAAQK,GAAGnC,UAAYb,EAAS6C,GAAGhC,UACnC8B,EAAQK,GAAGlC,aAAed,EAAS6C,GAAG/B,aACtC6B,EAAQK,GAAGrC,KAAOX,EAAS6C,GAAGlC,KAC9BgC,EAAQK,GAAGpC,MAAQ,SAErBmC,GAAQ,GAGPA,GAEHJ,EAAQM,KAAKjD,EAAS6C,IAG1B,EAAKnB,SAAS,CAAE1B,SAAU2C,KAI5B7C,KAAK0B,OAAO0B,QAAU,SAAAC,GACpB,EAAKzB,SAAS,CAACT,OAAO,2BAAK,EAAKM,MAAMN,QAAjB,IACnBE,KAAK,6BAAD,OAA+BgC,EAAIC,QAAnC,oBACJ/B,OAAO,MAET,EAAKG,OAAO6B,SAIdvD,KAAK0B,OAAO8B,QAAU,SAAAzB,GAChBA,EAAM0B,SACN,EAAK7B,SAAS,CAACT,OAAO,2BAAK,EAAKM,MAAMN,QAAjB,IACnBE,KAAK,mCAAD,OAAqCU,EAAM2B,MAC/CnC,OAAO,MAGT,EAAKK,SAAS,CAACT,OAAO,2BAAK,EAAKM,MAAMN,QAAjB,IACnBE,KAAM,0BACNE,OAAO,S,+BAMf,OACE,eAAC,IAAMoC,SAAP,WACE,cAAC,EAAD,CAASzD,SAAUF,KAAKyB,MAAMvB,WAC9B,cAAC,EAAD,CAAWiB,OAAQnB,KAAKyB,MAAMN,gB,GAnGFyC,IAAM3C,WCC1C4C,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f9ceea18.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './display.css';\r\n\r\nexport default class Display extends Component {\r\n  render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\">\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td width=\"25%\">ID</td>\r\n\t\t\t\t\t\t\t\t<td width=\"15%\">Name</td>\r\n\t\t\t\t\t\t\t\t<td width=\"10%\">Unit</td>\r\n\t\t\t\t\t\t\t\t<td width=\"20%\">Date & Time</td>\r\n\t\t\t\t\t\t\t\t<td>Measurements</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t{ this.props.messages.map( item =>\r\n\t\t\t\t\t\t<table width=\"100%\" cellSpacing=\"2px\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t<tbody key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t<tr key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t<td width=\"25%\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName={item.name.substr(0,3).toLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={Date.now()*Math.random()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item._id}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"15%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"10%\" key={Date.now()*Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t{item.unit}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"20%\" key={Date.now()*Math.random()} className={item.blink}>\r\n\t\t\t\t\t\t\t\t\t\t{item.timeStamp}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key={Date.now()*Math.random()} className={item.blink}>\r\n\t\t\t\t\t\t\t\t\t\t{item.measurements}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)}\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './statusBar.css';\r\n\r\nexport default class StatusBar extends Component {\r\n  render() {\r\n    const { server, info, error } = this.props.status;\r\n    let connection = error ? \"fail\" : \"good\";\r\n\r\n\t\treturn (\r\n\t\t\t<footer>\r\n        <span>\r\n          Server: <span className=\"primary\">{server}</span>\r\n        </span>\r\n        <span>\r\n          Status: <span className={connection}>{info}&nbsp;</span>\r\n        </span>\r\n        <span>\r\n          Copyright: <span className=\"primary\">Â© Netronix, 2020&nbsp;&nbsp;</span>\r\n        </span>\r\n      </footer>\r\n\t\t);\r\n  }\r\n}","import React from 'react';\r\nimport Display from '../Display/Display.jsx';\r\nimport StatusBar from '../StatusBar/StatusBar.jsx';\r\n\r\nexport default class Socket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      socket: 'wss://jsdemo.envdev.io/ws',\r\n      messages: [],\r\n      status: {\r\n        server: '',\r\n        info: '',\r\n        error: false\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // initializing Socket\r\n    this.socket = new WebSocket(this.state.socket);\r\n    this.setState({status: {...this.state.status, server: this.state.socket} });\r\n\r\n    // connected successfully\r\n    this.socket.onopen = () => {\r\n      this.setState({status: {...this.state.status, \r\n                              info: \"Connected\", \r\n                              error: false\r\n      }});\r\n    };\r\n\r\n    // received data from device and format it\r\n    this.socket.onmessage = event => { \r\n      let messages = JSON.parse(event.data);\r\n\r\n      // formating timestamp and value\r\n      messages.map((item, dex) => {\r\n        let str = \"\";\r\n        let formattedTime = \"\";\r\n        item.measurements.forEach(element => {\r\n          const date = new Date(element[0] * 1000);\r\n          formattedTime = `${date.toLocaleString()}`;\r\n          str = `${element[1]}`;\r\n        });\r\n        item.measurements = str;\r\n        item.timeStamp = formattedTime;\r\n        return item;\r\n      });\r\n      messages.filter((item, index) => messages.indexOf(item._id) === index);\r\n\r\n      // updating of new messages\r\n      let accumul = this.state.messages.slice();\r\n      accumul.map(item => item.blink = \"\");\r\n\r\n      for (let i=0; i<messages.length; i++) {\r\n        let hasID = false;\r\n        for (let j=0; j<accumul.length; j++) {\r\n          if (messages[i]._id === accumul[j]._id) {\r\n            if (messages[i].timeStamp && messages[i].measurements) {\r\n              accumul[j].timeStamp = messages[i].timeStamp;\r\n              accumul[j].measurements = messages[i].measurements;                \r\n              accumul[j].unit = messages[i].unit;\r\n              accumul[j].blink = \"blink\";\r\n            }\r\n            hasID = true;\r\n          }\r\n        }\r\n        if (!hasID) { // update values\r\n          // messages[i].blink = \"blink\";\r\n          accumul.push(messages[i]);\r\n        }\r\n      }\r\n      this.setState({ messages: accumul });      \r\n    };\r\n\r\n    // encountered error\r\n    this.socket.onerror = err => {\r\n      this.setState({status: {...this.state.status, \r\n        info: `Socket encountered error: ${err.message}. Closing socket`, \r\n        error: true\r\n      }});\r\n      this.socket.close();\r\n    };\r\n\r\n    // connection lost\r\n    this.socket.onclose = event => {\r\n      if (event.wasClean)\r\n          this.setState({status: {...this.state.status, \r\n            info: `Socket was closed clearly, code=${event.code}`, \r\n            error: true\r\n          }});\r\n        else\r\n          this.setState({status: {...this.state.status, \r\n            info: 'The connection was lost', \r\n            error: true\r\n          }});\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Display messages={this.state.messages} />\r\n        <StatusBar status={this.state.status} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Socket from './components/Socket/Socket';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Socket />\n    </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}